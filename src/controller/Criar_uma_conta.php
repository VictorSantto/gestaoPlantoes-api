<?php

	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     http://outcicle.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0
	 */
	
	namespace src\controller;
	use lib\getz;
	use src\logic;
	use src\model;
	use PHPMailer\PHPMailer\PHPMailer;	
	require "vendor/autoload.php";
	
	class Criar_uma_conta extends getz\Activator {
		
		public function __construct() { }
		
		public function init() {
			enableCORS();
			if ($_SERVER[REQUEST_METHOD] == strtoupper(POST)) {
				$criar_uma_contaInput = new model\Criar_uma_contaInput($this->request);
				if ($criar_uma_contaInput->isValid(POST)) {
					$this->daoFactory->beginTransaction();
					$usuariosDao = $this->daoFactory->getUsuariosDao();
					$where = USUARIOS . DOT . SITUACAO_REGISTRO . WHITE_SPACE . EQUALS . WHITE_SPACE . 
							NUMBER_ONE . WHITE_SPACE . STRING_AND . WHITE_SPACE . USUARIOS . DOT . EMAIL . WHITE_SPACE .
							EQUALS . WHITE_SPACE . DOUBLE_QUOTES . $criar_uma_contaInput->getEmail() . DOUBLE_QUOTES;
					$usuarios = $usuariosDao->read($where , STRING_EMPTY, false);
					$this->log->write(POST, $usuariosDao->getLog(), $this->debug);
					if (!is_array($usuarios) || sizeof($usuarios) == NUMBER_ZERO) {
						$result = $usuariosDao->create($criar_uma_contaInput->getEntity());
						$this->log->write(POST, $usuariosDao->getLog(), $this->debug);
						$insertId = $usuariosDao->getInsertId();
						$usuariosList = $usuariosDao->read(USUARIOS . DOT . ID . WHITE_SPACE . EQUALS . WHITE_SPACE . 
								$insertId, STRING_EMPTY, false);
						$this->log->write(GET, $usuariosDao->getLog(), $this->debug);		
						$usuarios = $usuariosList[NUMBER_ZERO];
						$token = md5(uniqid(time())) . G3TZ . (($insertId + NUMBER_THIRTY_TWO) * 
								NUMBER_ONE_HUNDRED_TWENTY_EIGHT); // Set your encrypt here.
						$usuarios->setActivation_token($token);
						$usuarios->setActivation_token_expiration(date(YMD_HIS, 
								strtotime(MORE_THREE_HUNDRED_SIXTY_FIVE)));
						$usuariosDao = $this->daoFactory->getUsuariosDao();
						$result = $usuariosDao->update($usuarios);
						$this->log->write(POST, $usuariosDao->getLog(), $this->debug);
						if ($result) {
							$usuariosList = $usuariosDao->read(USUARIOS . DOT . ID . WHITE_SPACE . EQUALS . 
									WHITE_SPACE . $insertId, STRING_EMPTY, false);
							$usuariosOutput = new model\UsuariosOutput();
							$this->response[RESPONSE][USUARIOS][VALUE] = $usuariosOutput->getOutputList($usuariosList);									
							$this->response[RESPONSE][USUARIOS][SIZE] = sizeOf(
									$this->response[RESPONSE][USUARIOS][VALUE]);
							$mail = $this->sendNewAccountEmail($criar_uma_contaInput->getEmail(), $token);
							if ($mail) {
								$this->daoFactory->commit();
								$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
								$this->response[RESPONSE][MESSAGE] = SUCCESS;	
							} else {
								$this->daoFactory->rollback();	
								$this->response[RESPONSE][STATUS] = NUMBER_FIVE_HUNDRED;
								$this->response[RESPONSE][MESSAGE] = FALHA_AO_ENVIAR_O_EMAIL;	
							}
						} else {												
							$this->daoFactory->rollback();								
							$this->response[RESPONSE][STATUS] = NUMBER_FIVE_HUNDRED;
							$this->response[RESPONSE][MESSAGE] = INTERNAL_SERVER_ERROR;
						}
					} else {
						$this->daoFactory->rollback();								
						$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
						$this->response[RESPONSE][MESSAGE] = FALHA_AO_CADASTRAR_O_USUARIO;
					}
					$this->daoFactory->close();					
				} else {
					$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
					$this->response[RESPONSE][MESSAGE] = $criar_uma_contaInput->getError();
				}
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(GET)) {
				$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
				$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(PUT)) {	
				$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
				$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(DELETE)) {
				$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
				$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;			
			} else {
				$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
				$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;	
			}
			echo json_encode($this->response, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES);
		}

		private function sendNewAccountEmail($mailTo, $token) {
			$tokenEncode = base64_encode($token);
			$link = BASE_LINK . "/ativar_a_minha_conta/" . $tokenEncode;
			$message = "<body style=\"margin: 0; padding: 0;\">
					<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" bgcolor=\"#eeeeee\">	
						<tr>
							<td style=\"padding: 32px 0;\">
								<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"border-collapse: collapse;\">
									<tr>
										<td align=\"center\" bgcolor=\"#12295d\" style=\"padding: 32px 32px; color: #ffffff; border-collapse: collapse; font-size: 28px; font-weight: bold; font-family: Arial, sans-serif;\">
											<b>@_YOUR_PROJECT</b>
										</td>
									</tr>
									<tr>
										<td bgcolor=\"#ffffff\" style=\"padding: 32px 32px;\">
											<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
												<tr>
													<td style=\"color: #12295d; font-family: Arial, sans-serif; font-size: 24px;\">
														<b>Ativar a minha conta</b>
													</td>
												</tr>
												<tr>
													<td style=\"padding: 32px 0 0 0; color: #12295d; font-family: Arial, sans-serif; font-size: 16px; line-height: 20px;\">
														<p>Prezado usuário,</p>
														<p>Clique no link abaixo para ativar a sua conta.</p>
													</td>
												</tr>
											</table>
										</td>
									</tr>
									<tr>
										<td bgcolor=\"#12295d\" style=\"padding: 32px 32px;\">
											<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
												<tr>
													<td style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 20px;\">
														<a href=\"" . $link . "\"><font color=\"#ffffff\">" . $link . "</font></a>
													</td>
												</tr>
											</table>
										</td>
									</tr>
									<tr>
										<td bgcolor=\"#ffffff\" style=\"padding: 32px 32px;\">
											<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
												<tr>
													<td style=\"padding: 0 0; color: #12295d; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;\">
														Este é um e-mail automático, por favor, não responda a este e-mail.
													</td>
												</tr>
											</table>
										</td>
									</tr>
									<tr>
										<td bgcolor=\"#ffffff\" style=\"padding: 32px 32px 32px 32px;\">
											<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
												<tr>
													<td style=\"padding: 0 0; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-align: right;\">
														<a href=\"https://www.@_YOUR_PROJECT.com.br/@_YOUR_PROJECT\"><font color=\"#12295d\">@_YOUR_PROJECT</font></a>
													</td>
												</tr>
											</table>
										</td>
									</tr>
								</table>
							</td>
						</tr>
					</table>
				</body>";
			$mail = new PHPMailer;
			$mail->isSMTP();
			$mail->SMTPDebug = 0; // use 2 for advanced debug
			$mail->Host = "smtp.hostinger.com";
			$mail->Port = 587;
			$mail->SMTPAuth = true;
			$mail->Username = "noreply@@_YOUR_PROJECT.com.br";
			$mail->Password = "@_YOUR_PASSWORD"; // Set your password here.
			$mail->setFrom("noreply@@_YOUR_PROJECT.com.br", "@_YOUR_PROJECT");
			$mail->addReplyTo("noreply@@_YOUR_PROJECT.com.br", "@_YOUR_PROJECT");
			$mail->addAddress($mailTo);
			$mail->Subject = "@_YOUR_PROJECT - Ativar a minha conta";
			$mail->CharSet = "UTF-8";
			$mail->msgHTML($message);
			if ($mail->send()) {
				return true;
			} else {
				return false;
			}
		}
	}
?>