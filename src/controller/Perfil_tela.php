<?php

	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0
	 */
	 
	namespace src\controller;
	use lib\getz;
	use src\model;
	
	class Perfil_tela extends getz\Activator {
		
		public function __construct() { }
		
		public function init() {
			enableCORS();
			if ($_SERVER[REQUEST_METHOD] == strtoupper(POST)) {
				$perfil_telaInput = new model\Perfil_telaInput($this->request);
				if ($perfil_telaInput->isValid(POST)) {
					$this->daoFactory->beginTransaction();
					$perfil_telaDao = $this->daoFactory->getPerfil_telaDao();
					$result = $perfil_telaDao->create($perfil_telaInput->getEntity());
					$this->log->write(POST, $perfil_telaDao->getLog(), $this->debug);
					$insertId = $perfil_telaDao->getInsertId();
					if ($result) {		
						$perfil_telaList = $perfil_telaDao->read(PERFIL_TELA . DOT . ID . WHITE_SPACE . EQUALS . 
								WHITE_SPACE . $insertId, STRING_EMPTY, false);
						$this->log->write(GET, $perfil_telaDao->getLog(), $this->debug);
						$perfil_telaOutput = new model\Perfil_telaOutput();
						$this->response[RESPONSE][PERFIL_TELA][VALUE] = $perfil_telaOutput->getOutputList(
								$perfil_telaList);									
						$this->response[RESPONSE][PERFIL_TELA][SIZE] = sizeOf(
								$this->response[RESPONSE][PERFIL_TELA][VALUE]);							
						$this->daoFactory->commit();
						$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
						$this->response[RESPONSE][MESSAGE] = SUCCESS;								
					} else {												
						$this->daoFactory->rollback();								
						$this->response[RESPONSE][STATUS] = NUMBER_FIVE_HUNDRED;
						$this->response[RESPONSE][MESSAGE] = INTERNAL_SERVER_ERROR;
					}
					$this->daoFactory->close();					
				} else {
					$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
					$this->response[RESPONSE][MESSAGE] = $perfil_telaInput->getError();
				}
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(GET)) {
				if ($this->resource != STRING_EMPTY) {
					$this->where = PERFIL_TELA . DOT . ID . WHITE_SPACE . EQUALS . WHITE_SPACE . $this->resource;	
				}
				if ($this->order == STRING_EMPTY) {
					$this->order = PERFIL_TELA . DOT . ID . WHITE_SPACE . DESC;
				}
				$this->daoFactory->beginTransaction();
				$perfil_telaDao = $this->daoFactory->getPerfil_telaDao();
				$perfil_telaList = $perfil_telaDao->read($this->where, $this->order, $this->hasPagination);	
				$this->log->write(GET, $perfil_telaDao->getLog(), $this->debug);
				$perfil_telaOutput = new model\Perfil_telaOutput();
				$this->response[RESPONSE][PERFIL_TELA][VALUE] = $perfil_telaOutput->getOutputList($perfil_telaList);													
				$this->daoFactory->close();				
				if ($this->hasPagination) {
					$this->response[RESPONSE][PERFIL_TELA][SIZE] = $perfil_telaDao->getSize();
					if ($this->response[RESPONSE][PERFIL_TELA][SIZE] == NUMBER_ZERO) {
						$this->response[RESPONSE] = null;
						$this->response[RESPONSE][MESSAGE] = DATA_NOT_FOUND;
					}
				} else {
					$this->response[RESPONSE][PERFIL_TELA][SIZE] = sizeOf(
							$this->response[RESPONSE][PERFIL_TELA][VALUE]);	
					if ($this->response[RESPONSE][PERFIL_TELA][SIZE] == NUMBER_ZERO) {
						$this->response[RESPONSE] = null;
						$this->response[RESPONSE][MESSAGE] = DATA_NOT_FOUND;
					}
				}
				$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(PUT)) {		
				if ($this->resource != STRING_EMPTY && !empty($this->request) && $this->request[ID] == 
						$this->resource) {
					$perfil_telaInput = new model\Perfil_telaInput($this->request);
					if ($perfil_telaInput->isValid(PUT)) {
						$this->daoFactory->beginTransaction();
						$perfil_telaDao = $this->daoFactory->getPerfil_telaDao();
						$perfil_telaList = $perfil_telaDao->read(PERFIL_TELA . DOT . ID . WHITE_SPACE . EQUALS . 
								WHITE_SPACE . $this->resource, STRING_EMPTY, false);
						$this->log->write(GET, $perfil_telaDao->getLog(), $this->debug);
						if (!is_null($perfil_telaList) && sizeOf($perfil_telaList) > NUMBER_ZERO) {
							$result = $perfil_telaDao->update($perfil_telaInput->getEntity());
							$this->log->write(PUT, $perfil_telaDao->getLog(), $this->debug);	
							if ($result) {	
								$perfil_telaList = $perfil_telaDao->read(PERFIL_TELA . DOT . ID . WHITE_SPACE . EQUALS . 
										WHITE_SPACE . $this->resource, STRING_EMPTY, false);
								$this->log->write(GET, $perfil_telaDao->getLog(), $this->debug);
								$perfil_telaOutput = new model\Perfil_telaOutput();
								$this->response[RESPONSE][PERFIL_TELA][VALUE] = $perfil_telaOutput->getOutputList(
										$perfil_telaList);									
								$this->response[RESPONSE][PERFIL_TELA][SIZE] = sizeOf(
										$this->response[RESPONSE][PERFIL_TELA][VALUE]);							
								$this->daoFactory->commit();
								$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
								$this->response[RESPONSE][MESSAGE] = SUCCESS;									
							} else {							
								$this->daoFactory->rollback();
								$this->response[RESPONSE][STATUS] = NUMBER_FIVE_HUNDRED;
								$this->response[RESPONSE][MESSAGE] = INTERNAL_SERVER_ERROR;
							}
						} else {
							$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
							$this->response[RESPONSE][MESSAGE] = DATA_NOT_FOUND;	
						}
						$this->daoFactory->close();
					} else {
						$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
						$this->response[RESPONSE][MESSAGE] = $perfil_telaInput->getError();
					}
				} else {
					$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
					$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;	
				}
			} else if ($_SERVER[REQUEST_METHOD] == strtoupper(DELETE)) {
				if ($this->resource != STRING_EMPTY) {
					$this->daoFactory->beginTransaction();
					$perfil_telaDao = $this->daoFactory->getPerfil_telaDao();
					$perfil_telaList = $perfil_telaDao->read(PERFIL_TELA . DOT . ID . WHITE_SPACE . EQUALS . WHITE_SPACE . 
							$this->resource, STRING_EMPTY, false);
					$this->log->write(GET, $perfil_telaDao->getLog(), $this->debug);
					if (!is_null($perfil_telaList) && sizeOf($perfil_telaList) > NUMBER_ZERO) {
						$result = $perfil_telaDao->delete($perfil_telaList[NUMBER_ZERO]);
						$this->log->write(DELETE, $perfil_telaDao->getLog(), $this->debug);	
						if ($result) {
							$this->daoFactory->commit();
							$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
							$this->response[RESPONSE][MESSAGE] = SUCCESS;							
						} else {
							$this->daoFactory->rollback();
							$this->response[RESPONSE][STATUS] = NUMBER_FIVE_HUNDRED;
							$this->response[RESPONSE][MESSAGE] = INTERNAL_SERVER_ERROR;	
						}
						$this->daoFactory->close();	
					} else {
						$this->response[RESPONSE][STATUS] = NUMBER_TWO_HUNDRED;
						$this->response[RESPONSE][MESSAGE] = DATA_NOT_FOUND;	
					}
				} else {
					$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
					$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;	
				}				
			} else {
				$this->response[RESPONSE][STATUS] = NUMBER_FOUR_HUNDRED;
				$this->response[RESPONSE][MESSAGE] = BAD_REQUEST;	
			}
			echo json_encode($this->response, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES);
		}
		
	}

?>