<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use src\model;	

	class CoresOutput implements \JsonSerializable {
			
		private $id;
		private $cor;
		private $hexadecimal;
		private $cadastrado;
		private $modificado;
		private $tipos_coresOutput;
			
		public function __construct() { }
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getCor() {
			return $this->cor;
		}
		
		public function setCor($cor) {
			$this->cor = $cor;
		}
					
		public function getHexadecimal() {
			return $this->hexadecimal;
		}
		
		public function setHexadecimal($hexadecimal) {
			$this->hexadecimal = $hexadecimal;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}
					
		public function getTipos_coresOutput() {
			return $this->tipos_coresOutput;
		}
		
		public function setTipos_coresOutput($tipos_coresOutput) {
			$this->tipos_coresOutput = $tipos_coresOutput;
		}

		public function getOutput($cores) {
			if (!is_null($cores)) {
				$coresOutput = new model\CoresOutput();
				$coresOutput->setId($cores->getId());
				$coresOutput->setCor($cores->getCor());
				$coresOutput->setHexadecimal($cores->getHexadecimal());
				$tipos_coresOutput = new model\Tipos_coresOutput();
				$coresOutput->setTipos_coresOutput($tipos_coresOutput->getOutput($cores->getTipos_cores()));
				return $coresOutput;
			} else {
				return null;
			}
		}
			
		public function getOutputList($coresList) {
			$coresOutputList = array();
			$count = NUMBER_ZERO;
			for ($x = NUMBER_ZERO; $x < sizeof($coresList); $x++) {
				$coresOutputList[$count] = $this->getOutput($coresList[$x]);
				$count++;
			}
			return $coresOutputList;
		}
		
		public function jsonSerialize() {
			$objectVars = get_object_vars($this);
			return array_filter($objectVars, function ($value) { 
				return $value != null;
			});
		}		
		
	}
	
?>