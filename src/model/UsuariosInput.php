<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use lib\getz;
	use src\model;

	class UsuariosInput extends getz\Inject {
			
		private $id;
		private $usuario;
		private $cpf;
		private $email;
		private $senha;
		private $foto;
		private $access_token;
		private $access_token_expiration;
		private $password_token;
		private $password_token_expiration;
		private $activation_token;
		private $activation_token_expiration;
		private $cadastrado;
		private $modificado;
		private $situacoes_registrosInput;
		private $perfisInput;
			
		private $error;	
			
		public function __construct($request) { 
			if (isset($request[ID])) {
				$this->id = $this->inject($request[ID]);	
			}
			if (isset($request[USUARIO])) {
				$this->usuario = $this->inject($request[USUARIO]);	
			}
			if (isset($request[CPF])) {
				$this->cpf = $this->inject($request[CPF]);	
			}
			if (isset($request[EMAIL])) {
				$this->email = $this->inject($request[EMAIL]);	
			}
			if (isset($request[SENHA])) {
				$this->senha = $this->inject($request[SENHA]);	
			}
			if (isset($request[FOTO])) {
				$this->foto = $this->inject($request[FOTO]);	
			}
			if (isset($request[ACCESS_TOKEN])) {
				$this->access_token = $this->inject($request[ACCESS_TOKEN]);	
			}
			if (isset($request[ACCESS_TOKEN_EXPIRATION])) {
				$this->access_token_expiration = $this->inject($request[ACCESS_TOKEN_EXPIRATION]);	
			}
			if (isset($request[PASSWORD_TOKEN])) {
				$this->password_token = $this->inject($request[PASSWORD_TOKEN]);	
			}
			if (isset($request[PASSWORD_TOKEN_EXPIRATION])) {
				$this->password_token_expiration = $this->inject($request[PASSWORD_TOKEN_EXPIRATION]);	
			}
			if (isset($request[ACTIVATION_TOKEN])) {
				$this->activation_token = $this->inject($request[ACTIVATION_TOKEN]);	
			}
			if (isset($request[ACTIVATION_TOKEN_EXPIRATION])) {
				$this->activation_token_expiration = $this->inject($request[ACTIVATION_TOKEN_EXPIRATION]);	
			}
			if (isset($request[CADASTRADO])) {
				$this->cadastrado = $this->inject($request[CADASTRADO]);	
			}
			if (isset($request[MODIFICADO])) {
				$this->modificado = $this->inject($request[MODIFICADO]);	
			}
			if (isset($request[SITUACOES_REGISTROS_INPUT]) && isset($request[SITUACOES_REGISTROS_INPUT][ID])) {
				$situacoes_registrosInput = new model\Situacoes_registrosInput($request[SITUACOES_REGISTROS_INPUT]);
				$this->situacoes_registrosInput = $situacoes_registrosInput;	
			}
			if (isset($request[PERFIS_INPUT]) && isset($request[PERFIS_INPUT][ID])) {
				$perfisInput = new model\PerfisInput($request[PERFIS_INPUT]);
				$this->perfisInput = $perfisInput;	
			}
		}
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getUsuario() {
			return $this->usuario;
		}
		
		public function setUsuario($usuario) {
			$this->usuario = $usuario;
		}
					
		public function getCpf() {
			return $this->cpf;
		}
		
		public function setCpf($cpf) {
			$this->cpf = $cpf;
		}
					
		public function getEmail() {
			return $this->email;
		}
		
		public function setEmail($email) {
			$this->email = $email;
		}
					
		public function getSenha() {
			return $this->senha;
		}
		
		public function setSenha($senha) {
			$this->senha = $senha;
		}
					
		public function getFoto() {
			return $this->foto;
		}
		
		public function setFoto($foto) {
			$this->foto = $foto;
		}
					
		public function getAccess_token() {
			return $this->access_token;
		}
		
		public function setAccess_token($access_token) {
			$this->access_token = $access_token;
		}
					
		public function getAccess_token_expiration() {
			return $this->access_token_expiration;
		}
		
		public function setAccess_token_expiration($access_token_expiration) {
			$this->access_token_expiration = $access_token_expiration;
		}
					
		public function getPassword_token() {
			return $this->password_token;
		}
		
		public function setPassword_token($password_token) {
			$this->password_token = $password_token;
		}
					
		public function getPassword_token_expiration() {
			return $this->password_token_expiration;
		}
		
		public function setPassword_token_expiration($password_token_expiration) {
			$this->password_token_expiration = $password_token_expiration;
		}
					
		public function getActivation_token() {
			return $this->activation_token;
		}
		
		public function setActivation_token($activation_token) {
			$this->activation_token = $activation_token;
		}
					
		public function getActivation_token_expiration() {
			return $this->activation_token_expiration;
		}
		
		public function setActivation_token_expiration($activation_token_expiration) {
			$this->activation_token_expiration = $activation_token_expiration;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}
					
		public function getSituacoes_registrosInput() {
			return $this->situacoes_registrosInput;
		}
		
		public function setSituacoes_registrosInput($situacoes_registrosInput) {
			$this->situacoes_registrosInput = $situacoes_registrosInput;
		}
					
		public function getPerfisInput() {
			return $this->perfisInput;
		}
		
		public function setPerfisInput($perfisInput) {
			$this->perfisInput = $perfisInput;
		}	
			
		public function getError() {
			return $this->error;
		}
		
		private function setError($error) {
			$this->error = $error;
		}	

		public function isValid($method) {		
			if ($method == POST) {
				if (is_null($this->usuario) || empty($this->usuario)) {
					$this->setError(THE_ATTRIBUTE . USUARIO . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->cpf) || empty($this->cpf)) {
					$this->setError(THE_ATTRIBUTE . CPF . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->email) || empty($this->email)) {
					$this->setError(THE_ATTRIBUTE . EMAIL . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->senha) || empty($this->senha)) {
					$this->setError(THE_ATTRIBUTE . SENHA . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->foto) || empty($this->foto)) {
					$this->setError(THE_ATTRIBUTE . FOTO . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->access_token) || empty($this->access_token)) {
					$this->setError(THE_ATTRIBUTE . ACCESS_TOKEN . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->access_token_expiration) || empty($this->access_token_expiration)) {
					$this->setError(THE_ATTRIBUTE . ACCESS_TOKEN_EXPIRATION . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->password_token) || empty($this->password_token)) {
					$this->setError(THE_ATTRIBUTE . PASSWORD_TOKEN . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->password_token_expiration) || empty($this->password_token_expiration)) {
					$this->setError(THE_ATTRIBUTE . PASSWORD_TOKEN_EXPIRATION . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->activation_token) || empty($this->activation_token)) {
					$this->setError(THE_ATTRIBUTE . ACTIVATION_TOKEN . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->activation_token_expiration) || empty($this->activation_token_expiration)) {
					$this->setError(THE_ATTRIBUTE . ACTIVATION_TOKEN_EXPIRATION . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->situacoes_registrosInput) || is_null($this->situacoes_registrosInput->getId()) || empty($this->situacoes_registrosInput->getId())) {
					$this->setError(THE_ATTRIBUTE . SITUACOES_REGISTROS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->perfisInput) || is_null($this->perfisInput->getId()) || empty($this->perfisInput->getId())) {
					$this->setError(THE_ATTRIBUTE . PERFIS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				return true;
			} else if ($method == PUT) {
				if (is_null($this->id) || empty($this->id)) {
					$this->setError(THE_ATTRIBUTE . ID . IS_REQUIRED);
					return false;					
				} else {
					return true;
				}
			}
		}
		
		public function getEntity() {
			$usuarios = new model\Usuarios();
			if (!is_null($this->id)) {
				$usuarios->setId($this->id);
			}
			if (!is_null($this->usuario)) {
				$usuarios->setUsuario($this->usuario);	
			}
			if (!is_null($this->cpf)) {
				$usuarios->setCpf($this->cpf);	
			}
			if (!is_null($this->email)) {
				$usuarios->setEmail($this->email);	
			}
			if (!is_null($this->senha)) {
				$usuarios->setSenha($this->senha);	
			}
			if (!is_null($this->foto)) {
				$usuarios->setFoto($this->foto);	
			}
			if (!is_null($this->access_token)) {
				$usuarios->setAccess_token($this->access_token);	
			}
			if (!is_null($this->access_token_expiration)) {
				$usuarios->setAccess_token_expiration(controllerDatetime($this->access_token_expiration));	
			}
			if (!is_null($this->password_token)) {
				$usuarios->setPassword_token($this->password_token);	
			}
			if (!is_null($this->password_token_expiration)) {
				$usuarios->setPassword_token_expiration(controllerDatetime($this->password_token_expiration));	
			}
			if (!is_null($this->activation_token)) {
				$usuarios->setActivation_token($this->activation_token);	
			}
			if (!is_null($this->activation_token_expiration)) {
				$usuarios->setActivation_token_expiration(controllerDatetime($this->activation_token_expiration));	
			} 
			$usuarios->setCadastrado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			$usuarios->setModificado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			if (!is_null($this->situacoes_registrosInput)) {
				$situacoes_registros = $this->situacoes_registrosInput->getEntity();
				$usuarios->setSituacoes_registros($situacoes_registros);
			}
			if (!is_null($this->perfisInput)) {
				$perfis = $this->perfisInput->getEntity();
				$usuarios->setPerfis($perfis);
			}
			return $usuarios;
		}		
		
	}
	
?>