<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use lib\getz;
	use src\model;

	class Criar_uma_contaInput extends getz\Inject {
			
		private $usuario;
		private $cpf;
		private $data_nascimento;
		private $celular;
		private $email;
		private $senha;
			
		private $error;	
			
		public function __construct($request) {
			if (isset($request[USUARIO])) {
				$this->usuario = $this->inject($request[USUARIO]);	
			}
			if (isset($request[CPF])) {
				$this->cpf = $this->inject($request[CPF]);	
			}
			if (isset($request[DATA_NASCIMENTO])) {
				$this->data_nascimento = $this->inject($request[DATA_NASCIMENTO]);	
			}
			if (isset($request[CELULAR])) {
				$this->celular = $this->inject($request[CELULAR]);	
			}
			if (isset($request[EMAIL])) {
				$this->email = $this->inject($request[EMAIL]);	
			}
			if (isset($request[SENHA])) {
				$this->senha = $this->inject($request[SENHA]);	
			}
		}
								
		public function getUsuario() {
			return $this->usuario;
		}
		
		public function setUsuario($usuario) {
			$this->usuario = $usuario;
		}
					
		public function getCpf() {
			return $this->cpf;
		}
		
		public function setCpf($cpf) {
			$this->cpf = $cpf;
		}
					
		public function getData_nascimento() {
			return $this->data_nascimento;
		}
		
		public function setData_nascimento($data_nascimento) {
			$this->data_nascimento = $data_nascimento;
		}
					
		public function getCelular() {
			return $this->celular;
		}
		
		public function setCelular($celular) {
			$this->celular = $celular;
		}
					
		public function getEmail() {
			return $this->email;
		}
		
		public function setEmail($email) {
			$this->email = $email;
		}
					
		public function getSenha() {
			return $this->senha;
		}
		
		public function setSenha($senha) {
			$this->senha = $senha;
		}
	
		public function getError() {
			return $this->error;
		}
		
		private function setError($error) {
			$this->error = $error;
		}	

		public function isValid($method) {		
			if ($method == POST) {
				if ($this->usuario == null || $this->usuario == STRING_EMPTY) {
					$this->setError(THE_ATTRIBUTE . USUARIO . IS_REQUIRED);
					return false;					
				} 
				if ($this->cpf == null || $this->cpf == STRING_EMPTY) {
					$this->setError(THE_ATTRIBUTE . CPF . IS_REQUIRED);
					return false;					
				} 
				if ($this->data_nascimento == null || $this->data_nascimento == STRING_EMPTY) {
					$this->setError(THE_ATTRIBUTE . DATA_NASCIMENTO . IS_REQUIRED);
					return false;					
				}
				if ($this->email == null || $this->email == STRING_EMPTY) {
					$this->setError(THE_ATTRIBUTE . EMAIL . IS_REQUIRED);
					return false;					
				} 
				if ($this->senha == null || $this->senha == STRING_EMPTY) {
					$this->setError(THE_ATTRIBUTE . SENHA . IS_REQUIRED);
					return false;					
				}
				return true;
			}
		}
		
		public function getEntity() {
			$usuarios = new model\Usuarios();
			if ($this->usuario != null) {
				$usuarios->setUsuario($this->usuario);	
			}
			if ($this->cpf != null) {
				$usuarios->setCpf($this->cpf);	
			}
			if ($this->data_nascimento != null) {
				$usuarios->setData_nascimento(controllerDate($this->data_nascimento));	
			}
			if ($this->celular != null) {
				$usuarios->setCelular($this->celular);	
			}
			if ($this->email != null) {
				$usuarios->setEmail($this->email);	
			}
			if ($this->senha != null) {
				$usuarios->setSenha(md5($this->senha));	
			}
			$usuarios->setFoto(STRING_EMPTY);	
			$usuarios->setAccess_token(STRING_EMPTY);	
			$usuarios->setAccess_token_expiration(DEFAULT_DATE);	
			$usuarios->setPassword_token(STRING_EMPTY);	
			$usuarios->setPassword_token_expiration(DEFAULT_DATE);	
			$usuarios->setActivation_token(STRING_EMPTY);	
			$usuarios->setActivation_token_expiration(DEFAULT_DATE);	
			$usuarios->setCadastrado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			$usuarios->setModificado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			$situacoes_registros = new model\Situacoes_registros();
			$situacoes_registros->setId(NUMBER_TWO);
			$usuarios->setSituacoes_registros($situacoes_registros);
			$perfis = new model\Perfis();
			$perfis->setId(NUMBER_TWO);
			$usuarios->setPerfis($perfis);
			return $usuarios;
		}
		
	}
	
?>