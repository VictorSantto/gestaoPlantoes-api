<?php
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz 
	 * @since   1.0.0
	 * @version 1.0.0	 
	 */
	 
	namespace src\model; 
	use src\model;
	
	class Perfil_telaDao {
		
		private $connection;
		private $size;
		private $log;
		private $columns = PERFIL_TELA . DOT. ID . WHITE_SPACE . STRING_AS . WHITE_SPACE . DOUBLE_QUOTES . PERFIL_TELA . DOT . ID . DOUBLE_QUOTES . COMMA . WHITE_SPACE . PERFIL_TELA . DOT. CADASTRADO . WHITE_SPACE . STRING_AS . WHITE_SPACE . DOUBLE_QUOTES . PERFIL_TELA . DOT . CADASTRADO . DOUBLE_QUOTES . COMMA . WHITE_SPACE . PERFIL_TELA . DOT. MODIFICADO . WHITE_SPACE . STRING_AS . WHITE_SPACE . DOUBLE_QUOTES . PERFIL_TELA . DOT . MODIFICADO . DOUBLE_QUOTES;
		
		public function __construct($connection) {
			$this->connection = $connection;
		}
		
		public function getInsertId() {
			return $this->connection->getInsertId();
		}

		public function getSize() {
			return $this->size;
		}

		private function setLog($log) {
			$this->log = $log;
		}
		
		public function getLog() {
			return $this->log;
		}
		
		public function getColumns() {
			return $this->columns;
		}
		
		public function create($perfil_tela) {
			$query = INSERT . WHITE_SPACE . INTO . WHITE_SPACE . PERFIL_TELA . WHITE_SPACE . LEFT_PARENTHESES . CADASTRADO . COMMA . WHITE_SPACE . MODIFICADO . COMMA . WHITE_SPACE . PERFIL . COMMA . WHITE_SPACE . TIPO_PERMISSAO . COMMA . WHITE_SPACE . TELA . RIGHT_PARENTHESES . WHITE_SPACE . VALUES . WHITE_SPACE . LEFT_PARENTHESES . DOUBLE_QUOTES . $perfil_tela->getCadastrado() . DOUBLE_QUOTES . COMMA . WHITE_SPACE . DOUBLE_QUOTES . $perfil_tela->getModificado() . DOUBLE_QUOTES . COMMA . WHITE_SPACE . DOUBLE_QUOTES . $perfil_tela->getPerfis()->getId() . DOUBLE_QUOTES . COMMA . WHITE_SPACE . DOUBLE_QUOTES . $perfil_tela->getTipos_permissoes()->getId() . DOUBLE_QUOTES . COMMA . WHITE_SPACE . DOUBLE_QUOTES . $perfil_tela->getTelas()->getId() . DOUBLE_QUOTES . RIGHT_PARENTHESES;
			$this->setLog($query);
			return $this->connection->execute($query);
		}

		public function read($where, $order, $hasPagination) {
			$count = NUMBER_ZERO;
			if ($where != STRING_EMPTY) {
				$where = WHERE . WHITE_SPACE . $where . WHITE_SPACE . STRING_AND . WHITE_SPACE . PERFIL_TELA . DOT . PERFIL . WHITE_SPACE . EQUALS . WHITE_SPACE. PERFIS . DOT . ID . WHITE_SPACE . STRING_AND . WHITE_SPACE . PERFIL_TELA . DOT . TIPO_PERMISSAO . WHITE_SPACE . EQUALS . WHITE_SPACE. TIPOS_PERMISSOES . DOT . ID . WHITE_SPACE . STRING_AND . WHITE_SPACE . PERFIL_TELA . DOT . TELA . WHITE_SPACE . EQUALS . WHITE_SPACE. TELAS . DOT . ID;
			} else {
				$where = WHERE . WHITE_SPACE . PERFIL_TELA . DOT . PERFIL . WHITE_SPACE . EQUALS . WHITE_SPACE. PERFIS . DOT . ID . WHITE_SPACE . STRING_AND . WHITE_SPACE . PERFIL_TELA . DOT . TIPO_PERMISSAO . WHITE_SPACE . EQUALS . WHITE_SPACE. TIPOS_PERMISSOES . DOT . ID . WHITE_SPACE . STRING_AND . WHITE_SPACE . PERFIL_TELA . DOT . TELA . WHITE_SPACE . EQUALS . WHITE_SPACE. TELAS . DOT . ID;
			}
			if ($order != STRING_EMPTY) {
				$order = ORDER_BY . WHITE_SPACE . $order;
			}
			$perfisDao = new model\PerfisDao($this->connection);
			$tipos_permissoesDao = new model\Tipos_permissoesDao($this->connection);
			$telasDao = new model\TelasDao($this->connection);
			$query = SELECT . WHITE_SPACE . $this->columns . COMMA . WHITE_SPACE . $perfisDao->getColumns() . COMMA . WHITE_SPACE . $tipos_permissoesDao->getColumns() . COMMA . WHITE_SPACE . $telasDao->getColumns() . WHITE_SPACE . FROM . WHITE_SPACE . PERFIL_TELA . WHITE_SPACE . PERFIL_TELA . COMMA . WHITE_SPACE . PERFIS . WHITE_SPACE . PERFIS . COMMA . WHITE_SPACE . TIPOS_PERMISSOES . WHITE_SPACE . TIPOS_PERMISSOES . COMMA . WHITE_SPACE . TELAS . WHITE_SPACE . TELAS . WHITE_SPACE . $where;
			$this->setLog($query . WHITE_SPACE . $order);
			$result = $this->connection->execute($query . WHITE_SPACE . $order);
			$perfil_telaList = array();
			while ($row = $result->fetch_assoc()) {
				$perfil_tela = new model\Perfil_tela();
				$perfil_tela->setId($row[PERFIL_TELA . POINT . ID]);
				$perfil_tela->setCadastrado($row[PERFIL_TELA . POINT . CADASTRADO]);
				$perfil_tela->setModificado($row[PERFIL_TELA . POINT . MODIFICADO]);
				$perfis = new model\Perfis();
				$perfis->setId($row[PERFIS . DOT . ID]);
				$perfis->setPerfil($row[PERFIS . DOT . PERFIL]);
				$perfil_tela->setPerfis($perfis);
				$tipos_permissoes = new model\Tipos_permissoes();
				$tipos_permissoes->setId($row[TIPOS_PERMISSOES . DOT . ID]);
				$tipos_permissoes->setTipo_permissao($row[TIPOS_PERMISSOES . DOT . TIPO_PERMISSAO]);
				$perfil_tela->setTipos_permissoes($tipos_permissoes);
				$telas = new model\Telas();
				$telas->setId($row[TELAS . DOT . ID]);
				$telas->setTela($row[TELAS . DOT . TELA]);
				$perfil_tela->setTelas($telas);
				$perfil_telaList[$count] = $perfil_tela;
				$count++;
			}
			$this->connection->free($result);
			if ($hasPagination && $count > NUMBER_ZERO) {
				$result = $this->connection->execute($query);
				$size = NUMBER_ZERO;
				while ($row = $result->fetch_assoc()) {
					$size++;
				}
				$this->connection->free($result);				
				$this->size = $size;
			}
			return $perfil_telaList;
		}

		public function update($perfil_tela) {
			$query = UPDATE . WHITE_SPACE . PERFIL_TELA . WHITE_SPACE . SET . WHITE_SPACE . ID . WHITE_SPACE . EQUALS . 
					WHITE_SPACE . DOUBLE_QUOTES . $perfil_tela->getId() . DOUBLE_QUOTES;
			if (!is_null($perfil_tela->getPerfis()) && !empty($perfil_tela->getPerfis()->getId()) &&  
					!empty($perfil_tela->getPerfis()->getId())) {
				$query .= COMMA . WHITE_SPACE . PERFIL . WHITE_SPACE . EQUALS . WHITE_SPACE . DOUBLE_QUOTES . 
						$perfil_tela->getPerfis()->getId() . DOUBLE_QUOTES;
			}
			if (!is_null($perfil_tela->getTipos_permissoes()) && !empty($perfil_tela->getTipos_permissoes()->getId()) &&  
					!empty($perfil_tela->getTipos_permissoes()->getId())) {
				$query .= COMMA . WHITE_SPACE . TIPO_PERMISSAO . WHITE_SPACE . EQUALS . WHITE_SPACE . DOUBLE_QUOTES . 
						$perfil_tela->getTipos_permissoes()->getId() . DOUBLE_QUOTES;
			}
			if (!is_null($perfil_tela->getTelas()) && !empty($perfil_tela->getTelas()->getId()) &&  
					!empty($perfil_tela->getTelas()->getId())) {
				$query .= COMMA . WHITE_SPACE . TELA . WHITE_SPACE . EQUALS . WHITE_SPACE . DOUBLE_QUOTES . 
						$perfil_tela->getTelas()->getId() . DOUBLE_QUOTES;
			}
			$query .= COMMA . WHITE_SPACE . MODIFICADO . WHITE_SPACE . EQUALS . WHITE_SPACE . DOUBLE_QUOTES . 
					$perfil_tela->getModificado() . DOUBLE_QUOTES . WHITE_SPACE . WHERE . WHITE_SPACE . ID . EQUALS . 
					$perfil_tela->getId();
			$this->setLog($query);
			return $this->connection->execute($query);
		}

		public function delete($perfil_tela) {
			$query = DELETE . WHITE_SPACE . FROM . WHITE_SPACE . PERFIL_TELA . WHITE_SPACE . WHERE . WHITE_SPACE . ID . 
					WHITE_SPACE . EQUALS . WHITE_SPACE . $perfil_tela->getId();
			$this->setLog($query);
			return $this->connection->execute($query);
		}

	}

?>